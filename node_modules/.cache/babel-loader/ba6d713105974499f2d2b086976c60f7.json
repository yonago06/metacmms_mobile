{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\metaok\\\\my-app\\\\src\\\\components\\\\qr.js\";\nimport React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass Qr extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      delay: 300,\n      result: 'No result'\n    };\n    this.handleScan = this.handleScan.bind(this);\n  }\n\n  handleScan(result) {\n    if (result) {\n      this.setState({\n        result\n      });\n      console.log(result);\n\n      if (JSON.parse(result)) {\n        const assetResult = JSON.parse(result);\n\n        if (assetResult.object_type) {\n          if (assetResult.object_type === \"asset\") {\n            this.props.history.push({\n              pathname: '/assetEditor/' + assetResult.nid\n            });\n          } else {\n            alert(\"No esta seleccionado un equipo\");\n          }\n        } else {\n          alert(\"La etiqueta no posee el formato correcto\");\n        }\n      } else {\n        alert(\"La etiqueta no posee el formato correcto2\");\n      }\n    }\n  }\n\n  handleError(err) {\n    console.error(err);\n  }\n\n  render() {\n    const previewStyle = {\n      height: 'auto',\n      width: '100%',\n      padding: '10px'\n    };\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row row-header bg-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"QR\"))), React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        marginTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(QrReader, {\n      delay: this.state.delay,\n      style: previewStyle,\n      onError: this.handleError,\n      onScan: this.handleScan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        marginTop: '20px',\n        marginBottom: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg\",\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-primary btn-lg btn-full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Regresar\")))));\n  }\n\n}\n\nexport default withRouter(Qr);","map":{"version":3,"sources":["C:/xampp/htdocs/metaok/my-app/src/components/qr.js"],"names":["React","Component","QrReader","Link","withRouter","Qr","constructor","props","state","delay","result","handleScan","bind","setState","console","log","JSON","parse","assetResult","object_type","history","push","pathname","nid","alert","handleError","err","error","render","previewStyle","height","width","padding","marginTop","marginBottom","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,IAAT,EAAcC,UAAd,QAAgC,kBAAhC;;AAGA,MAAMC,EAAN,SAAiBJ,SAAjB,CAA0B;AAExBK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,GADI;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAKA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,UAAU,CAACD,MAAD,EAAQ;AAChB,QAAGA,MAAH,EAAU;AACR,WAAKG,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AACA,UAAGM,IAAI,CAACC,KAAL,CAAWP,MAAX,CAAH,EAAsB;AACpB,cAAMQ,WAAW,GAACF,IAAI,CAACC,KAAL,CAAWP,MAAX,CAAlB;;AAEA,YAAGQ,WAAW,CAACC,WAAf,EAA2B;AACzB,cAAGD,WAAW,CAACC,WAAZ,KAA0B,OAA7B,EAAqC;AACnC,iBAAKZ,KAAL,CAAWa,OAAX,CAAmBC,IAAnB,CACE;AACEC,cAAAA,QAAQ,EAAE,kBAAgBJ,WAAW,CAACK;AADxC,aADF;AAKD,WAND,MAOI;AACFC,YAAAA,KAAK,CAAC,gCAAD,CAAL;AACD;AACF,SAXD,MAYI;AACFA,UAAAA,KAAK,CAAC,0CAAD,CAAL;AACD;AACF,OAlBD,MAmBI;AACFA,QAAAA,KAAK,CAAC,2CAAD,CAAL;AACD;AAIF;AACF;;AACDC,EAAAA,WAAW,CAACC,GAAD,EAAK;AACdZ,IAAAA,OAAO,CAACa,KAAR,CAAcD,GAAd;AACD;;AAGDE,EAAAA,MAAM,GAAE;AACN,UAAMC,YAAY,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,KAAK,EAAE,MAFY;AAGnBC,MAAAA,OAAO,EAAE;AAHU,KAArB;AAMA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADF,CADA,EAME;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWC,KADpB;AAEE,MAAA,KAAK,EAAEoB,YAFT;AAGE,MAAA,OAAO,EAAE,KAAKJ,WAHhB;AAIE,MAAA,MAAM,EAAE,KAAKd,UAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CANF,EAiBE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACsB,QAAAA,SAAS,EAAC,MAAX;AAAkBC,QAAAA,YAAY,EAAC;AAA/B,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,yCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAb,CADF,CADF,CAjBF,CADF;AAyBD;;AAhFqB;;AAmF1B,eAAe/B,UAAU,CAACC,EAAD,CAAzB","sourcesContent":["import React,{Component} from 'react';\r\nimport QrReader from 'react-qr-reader'\r\nimport { Link,withRouter } from 'react-router-dom';\r\n\r\n\r\nclass Qr extends Component{\r\n\r\n  constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        delay: 300,\r\n        result: 'No result',\r\n      }\r\n\r\n      this.handleScan = this.handleScan.bind(this)\r\n    }\r\n\r\n    handleScan(result){\r\n      if(result){\r\n        this.setState({ result });\r\n        console.log(result);\r\n        if(JSON.parse(result)){\r\n          const assetResult=JSON.parse(result);\r\n\r\n          if(assetResult.object_type){\r\n            if(assetResult.object_type===\"asset\"){\r\n              this.props.history.push(\r\n                {\r\n                  pathname: '/assetEditor/'+assetResult.nid\r\n                }\r\n              )\r\n            }\r\n            else{\r\n              alert(\"No esta seleccionado un equipo\");\r\n            }\r\n          }\r\n          else{\r\n            alert(\"La etiqueta no posee el formato correcto\");\r\n          }\r\n        }\r\n        else{\r\n          alert(\"La etiqueta no posee el formato correcto2\");\r\n        }\r\n\r\n\r\n\r\n      }\r\n    }\r\n    handleError(err){\r\n      console.error(err)\r\n    }\r\n\r\n\r\n    render(){\r\n      const previewStyle = {\r\n        height: 'auto',\r\n        width: '100%',\r\n        padding: '10px',\r\n      }\r\n\r\n      return(\r\n        <div className=\"container\">\r\n        <div className=\"row row-header bg-success\">\r\n          <div className=\"col-lg\">\r\n              <h2>QR</h2>\r\n          </div>\r\n        </div>\r\n          <div className=\"row\" style={{marginTop:'20px'}}>\r\n            <div className=\"col-lg\">\r\n              <QrReader\r\n                delay={this.state.delay}\r\n                style={previewStyle}\r\n                onError={this.handleError}\r\n                onScan={this.handleScan}\r\n                />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\" style={{marginTop:'20px',marginBottom:'30px'}}>\r\n            <div className=\"col-lg\" style={{textAlign:'center'}}>\r\n              <Link to=\"/\"><button type=\"button\" className=\"btn btn-outline-primary btn-lg btn-full\">Regresar</button></Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default withRouter(Qr);\r\n"]},"metadata":{},"sourceType":"module"}