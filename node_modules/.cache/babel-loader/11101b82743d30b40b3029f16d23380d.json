{"ast":null,"code":"import _regeneratorRuntime from 'babel-runtime/regenerator';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSafari } from './helpers';\nvar videoStyles = {\n  display: 'flex'\n};\n\nvar VideoStream = function (_Component) {\n  _inherits(VideoStream, _Component);\n\n  function VideoStream() {\n    var _ref,\n        _this2 = this;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, VideoStream);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = VideoStream.__proto__ || Object.getPrototypeOf(VideoStream)).call.apply(_ref, [this].concat(args))), _this), _this.stream = null, _this.streamWidth = 0, _this.streamHeight = 0, _this.video = null, _this.canvasContext = null, _this.stopCamera = function () {\n      if (!_this.stream) return;\n\n      _this.stream.getTracks().map(function (t) {\n        return t.stop();\n      });\n\n      _this.stream = null;\n      _this.streamWidth = 0;\n      _this.streamHeight = 0;\n      _this.canvasContext = null;\n    }, _this.startCamera = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var devices, cameras, videoMode, cameraIndex, cameraEnv, canvas;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.stopCamera();\n\n              if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new Error('WebRTC API not supported in this browser');\n\n            case 3:\n              _context.next = 5;\n              return navigator.mediaDevices.enumerateDevices();\n\n            case 5:\n              devices = _context.sent;\n              cameras = devices.filter(function (device) {\n                return device.kind === 'videoinput';\n              });\n              videoMode = {\n                facingMode: 'user'\n              };\n\n              if (cameras.length > 1) {\n                cameraIndex = _this.props.rearCamera ? 1 : 0;\n                cameraEnv = _this.props.rearCamera ? 'environment' : 'user';\n                videoMode = isSafari() ? {\n                  facingMode: {\n                    exact: cameraEnv\n                  }\n                } : {\n                  deviceId: cameras[cameraIndex].deviceId\n                };\n              }\n\n              _context.next = 11;\n              return navigator.mediaDevices.getUserMedia({\n                audio: false,\n                video: videoMode\n              });\n\n            case 11:\n              _this.stream = _context.sent;\n\n              if (_this.video.srcObject !== undefined) {\n                _this.video.srcObject = _this.stream;\n              } else if (_this.video.mozSrcObject !== undefined) {\n                _this.video.mozSrcObject = _this.stream;\n              } else if (window.URL.createObjectURL) {\n                _this.video.src = window.URL.createObjectURL(_this.stream);\n              } else if (window.webkitURL) {\n                _this.video.src = window.webkitURL.createObjectURL(_this.stream);\n              } else {\n                _this.video.src = _this.stream;\n              }\n\n              _this.video.playsInline = true;\n\n              _this.video.play(); // firefox does not emit `loadeddata` if video not playing\n\n\n              _context.next = 17;\n              return _this.streamLoadedPromise();\n\n            case 17:\n              _this.streamWidth = _this.video.videoWidth;\n              _this.streamHeight = _this.video.videoHeight;\n\n              if (!_this.canvasContext) {\n                canvas = document.createElement('canvas');\n                canvas.width = _this.streamWidth;\n                canvas.height = _this.streamHeight;\n                _this.canvasContext = canvas.getContext('2d');\n              }\n\n            case 20:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this2);\n    })), _this.streamLoadedPromise = function () {\n      return new Promise(function (resolve, reject) {\n        _this.video.addEventListener('loadeddata', resolve, {\n          once: true\n        });\n\n        _this.video.addEventListener('error', reject, {\n          once: true\n        });\n      });\n    }, _this.captureFrame = function () {\n      _this.canvasContext.drawImage(_this.video, 0, 0, _this.streamWidth, _this.streamHeight);\n\n      return _this.canvasContext.getImageData(0, 0, _this.streamWidth, _this.streamHeight);\n    }, _this.drawFrame = function () {\n      window.requestAnimationFrame(function () {\n        if (!_this.canvasContext) return;\n\n        var _this$captureFrame = _this.captureFrame(),\n            data = _this$captureFrame.data;\n\n        _this.props.onFrame({\n          data: data,\n          width: _this.streamWidth,\n          height: _this.streamHeight\n        });\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(VideoStream, [{\n    key: 'componentDidMount',\n    value: function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var initSuccess, message;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                initSuccess = true;\n                message = '';\n                _context2.prev = 2;\n                _context2.next = 5;\n                return this.startCamera();\n\n              case 5:\n                _context2.next = 11;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2['catch'](2);\n                message = 'Browser camera init error: ' + _context2.t0;\n                initSuccess = false;\n\n              case 11:\n                if (typeof this.props.onInit === 'function') {\n                  this.props.onInit({\n                    error: initSuccess,\n                    message: message\n                  }, this.drawFrame);\n                }\n\n              case 12:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 7]]);\n      }));\n\n      function componentDidMount() {\n        return _ref3.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.stopCamera();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement('video', {\n        style: Object.assign({}, videoStyles, this.props.style),\n        ref: function ref(v) {\n          return _this3.video = v;\n        }\n      });\n    }\n  }]);\n\n  return VideoStream;\n}(Component);\n\n;\nVideoStream.propTypes = {\n  onInit: PropTypes.func.isRequired,\n  onFrame: PropTypes.func.isRequired,\n  style: PropTypes.object,\n  rearCamera: PropTypes.bool\n};\nVideoStream.defaultProps = {\n  style: {},\n  rearCamera: true\n};\nexport default VideoStream;","map":null,"metadata":{},"sourceType":"module"}